#!/bin/bash

BUCKET_NAME="mon-terraform-state-$(date +%s)"
REGION="eu-west-1"

echo "üöÄ D√©but de la configuration du backend Terraform..."
echo "üì¶ Bucket: ${BUCKET_NAME}, R√©gion: ${REGION}"
echo

# Cr√©er le bucket S3
if aws s3 mb s3://${BUCKET_NAME} --region ${REGION}; then
  echo "‚úÖ Bucket S3 cr√©√© avec succ√®s."
else
  echo "‚ùå Erreur lors de la cr√©ation du bucket S3."
  exit 1
fi

# Activer le versioning
if aws s3api put-bucket-versioning \
  --bucket ${BUCKET_NAME} \
  --versioning-configuration Status=Enabled; then
  echo "‚úÖ Versioning activ√©."
else
  echo "‚ùå Erreur lors de l‚Äôactivation du versioning."
  exit 1
fi

# Activer le chiffrement
if aws s3api put-bucket-encryption \
  --bucket ${BUCKET_NAME} \
  --server-side-encryption-configuration '{
    "Rules": [
      {
        "ApplyServerSideEncryptionByDefault": {
          "SSEAlgorithm": "AES256"
        }
      }
    ]
  }'; then
  echo "‚úÖ Chiffrement AES256 activ√©."
else
  echo "‚ùå Erreur lors de l‚Äôactivation du chiffrement."
  exit 1
fi

# Cr√©er la table DynamoDB pour le verrouillage
if aws dynamodb create-table \
  --table-name terraform-state-lock \
  --attribute-definitions AttributeName=LockID,AttributeType=S \
  --key-schema AttributeName=LockID,KeyType=HASH \
  --provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5 \
  --region ${REGION}; then
  echo "‚úÖ Table DynamoDB 'terraform-state-lock' cr√©√©e avec succ√®s."
else
  echo "‚ùå Erreur lors de la cr√©ation de la table DynamoDB."
  exit 1
fi

echo
echo "üéâ Backend configur√© avec succ√®s !"
echo "   S3 Bucket: ${BUCKET_NAME}"
echo "   DynamoDB Table: terraform-state-lock"
